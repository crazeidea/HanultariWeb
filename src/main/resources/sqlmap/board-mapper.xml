<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board.mapper">

<delete id="comment_delete">
	delete from board_comment where id = #{id}
</delete>

<update id="comment_update">
	update board_comment set content = #{content} where id = #{id}
</update>

<select id="comment_list" resultType="board.BoardCommentDTO">
	select c.*, (select name from member where member.id=writer) name 
	from board_comment c where pid = #{pid} 
	order by id desc
</select>

<insert id="comment_insert">
	insert into board_comment ( pid, writer, content )
	values ( #{pid}, #{writer}, #{content} )
</insert>

<update id="update">
	update board set title = #{title}, content = #{content}
					, filename = #{filename, jdbcType=VARCHAR}
					, filepath = #{filepath, jdbcType=VARCHAR}
	where id = #{id}
</update>

<delete id="delete">
	delete from board where id = #{id}
</delete>

<update id="read">
	update board set readcnt = readcnt+1 where id = #{id}
</update>

<select id="detail" resultType="board.BoardDTO">
	select board.*, (select name from member where member.id=writer) name 
	from board where id = #{id}
</select>

<insert id="insert">
	insert into board (title, writer, content, filename, filepath)
	values ( #{title}, #{writer}, #{content}
			, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR} ) 
</insert>

<sql id="search_where">
	<choose>
		<when test="search=='title' or search=='content'">
		where ${search} like '%'|| #{keyword} || '%'
		</when>
		<when test="search=='writer'">
		where writer in (select id from member 
					     where name like '%'|| #{keyword} || '%')
		</when>
		<when test="search=='all'">
		where title  like '%'|| #{keyword} || '%'
		or content  like '%'|| #{keyword} || '%'
		or writer in (select id from member 
					  where name like '%'|| #{keyword} || '%')
		</when>
	</choose>
</sql>

<select id='total_count' resultType="integer">
	select count(*) from board <include refid="search_where"/>
</select>

<select id='list' resultType="board.BoardDTO">
	select b.*, (select name from member m where m.id=writer) name 
	from (select b.*, rownum no  
		  from (select * from board <include refid="search_where"/> order by id) b 
		  order by no desc) b
	where no between #{beginList} and #{endList}
</select>

</mapper>